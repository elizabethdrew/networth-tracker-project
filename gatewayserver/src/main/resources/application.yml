spring:
  application:
    name: gatewayserver
  config:
    import: "optional:configserver:http://configserver:8071/"
  security:
    oauth2:
      resource-server:
        opaque-token:
          client-id: apigateway
  data:
    redis:
      connect-timeout: 2s
      host: localhost
      port: 6379
      timeout: 1s
  cloud:
    gateway:
      httpClient:
        connect-timeout: 1000
        response-timeout: 10s
      routes:
        - id: user-service
          uri: http://user-service:8081
          predicates:
            - Path=/api/v1/users/**, /api/v1/auth/**
          filters:
            - name: PreserveHostHeader
            - name: CircuitBreaker
              args:
                name: usersCircuitBreaker
            - name: RequestRateLimiter
        - id: account-service
          uri: http://account-service:8082
          predicates:
            - Path=/api/v1/accounts/**
          filters:
            - name: PreserveHostHeader
            - name: CircuitBreaker
              args:
                name: usersCircuitBreaker
            - name: RequestRateLimiter

server:
  port: 8080

logging:
  level:
    root: DEBUG
  pattern:
    level: "%5p [${spring.application.name},%X{trace_id},%X{span_id}]"

info:
  application:
    name: ${spring.application.name}
    version: '@project.version@'
    spring-cloud-version: '@spring-cloud.version@'
    spring-boot-version: '@project.parent.version@'

management:
  health:
    readiness-state:
      enabled: true
    liveness-state:
      enabled: true
  info:
    env:
      enabled: true
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    gateway:
      enabled: true
    info:
      enabled: true
    shutdown:
      enabled: true
    health:
      probes:
        enabled: true
  metrics:
    tags:
      application: ${spring.application.name}
  tracing:
    sampling:
      probability: 1.0

resilience4j.circuitbreaker:
  configs:
    default:
      slidingWindowSize: 10
      permittedNumberOfCallsInHalfOpenState: 2
      failureRateThreshold: 50
      waitDurationInOpenState: 10000

resilience4j.retry:
  configs:
    default:
      maxRetryAttempts: 3
      waitDuration: 100
      enableExponentialBackoff: true
      exponentialBackoffMultiplier: 2
      ignoreExceptions:
        - java.lang.NullPointerException